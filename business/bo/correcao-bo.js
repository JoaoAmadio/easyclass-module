"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CorrecaoAtividadeBO = void 0;
const typeorm_1 = require("typeorm");
const defaultDAO_1 = require("../core/dao/defaultDAO");
const respostaAtividade_1 = require("../../entities/respostaAtividade");
const correcaoRespostaAtividade_1 = require("../../entities/correcaoRespostaAtividade");
class CorrecaoAtividadeBO extends defaultDAO_1.DefaultDAO {
    constructor() {
        super();
        this.correcaoAtividadeRepositorio = (0, typeorm_1.getRepository)(correcaoRespostaAtividade_1.default);
    }
    async buscaPorRespostaAtividade(respostaAtividade) {
        const { idRespostaAtividade } = respostaAtividade;
        return this.correcaoAtividadeRepositorio.createQueryBuilder("correcaoRespostaAtividade")
            .innerJoinAndSelect("correcaoRespostaAtividade.respostaAtividade", "respostaAtividade")
            .innerJoinAndSelect("correcaoRespostaAtividade.autor", "autor")
            // Resposta Atividade
            .innerJoinAndSelect("respostaAtividade.atividade", "atividade")
            .innerJoinAndSelect("respostaAtividade.aluno", "aluno")
            .innerJoinAndSelect("atividade.disciplina", "disciplina")
            .innerJoinAndSelect("atividade.autor", "atividade_autor")
            .innerJoinAndSelect("atividade.curso", "curso")
            .leftJoinAndSelect("respostaAtividade.respostaAtividadeItens", "respostaAtividadeItens")
            .leftJoinAndSelect("respostaAtividadeItens.itemAtividade", "itemAtividade")
            .leftJoinAndSelect("itemAtividade.subitensItemAtividade", "itemAtividade_subitensItemAtividade")
            .leftJoinAndSelect("atividade.alunos", "alunos")
            .leftJoinAndSelect("atividade.itensAtividade", "itensAtividade")
            .leftJoinAndSelect("itensAtividade.subitensItemAtividade", "subitensItemAtividade")
            // Itens
            .leftJoinAndSelect("correcaoRespostaAtividade.correcaoAtividadeItens", "correcaoAtividadeItens")
            .leftJoinAndSelect("correcaoAtividadeItens.respostaAtividadeItem", "correcaoAtividadeItens_respostaAtividadeItem")
            .leftJoinAndSelect("correcaoAtividadeItens_respostaAtividadeItem.itemAtividade", "respostaAtividadeItem_itemAtividade")
            .leftJoinAndSelect("respostaAtividadeItem_itemAtividade.subitensItemAtividade", "respostaAtividadeItem_itemAtividade_subitensItemAtividade")
            .where("respostaAtividade.idRespostaAtividade = :idRespostaAtividade", { idRespostaAtividade })
            .getOne();
    }
    async buscaPorID(idCorrecaoRespostaAtividade) {
        return this.correcaoAtividadeRepositorio.createQueryBuilder("correcaoRespostaAtividade")
            .innerJoinAndSelect("correcaoRespostaAtividade.respostaAtividade", "respostaAtividade")
            .innerJoinAndSelect("correcaoRespostaAtividade.autor", "autor")
            // Resposta Atividade
            .innerJoinAndSelect("respostaAtividade.atividade", "atividade")
            .innerJoinAndSelect("respostaAtividade.aluno", "aluno")
            .innerJoinAndSelect("atividade.disciplina", "disciplina")
            .innerJoinAndSelect("atividade.autor", "atividade_autor")
            .innerJoinAndSelect("atividade.curso", "curso")
            .leftJoinAndSelect("respostaAtividade.respostaAtividadeItens", "respostaAtividadeItens")
            .leftJoinAndSelect("respostaAtividadeItens.itemAtividade", "itemAtividade")
            .leftJoinAndSelect("itemAtividade.subitensItemAtividade", "itemAtividade_subitensItemAtividade")
            .leftJoinAndSelect("atividade.alunos", "alunos")
            .leftJoinAndSelect("atividade.itensAtividade", "itensAtividade")
            .leftJoinAndSelect("itensAtividade.subitensItemAtividade", "subitensItemAtividade")
            // Itens
            .leftJoinAndSelect("correcaoRespostaAtividade.correcaoAtividadeItens", "correcaoAtividadeItens")
            .leftJoinAndSelect("correcaoAtividadeItens.respostaAtividadeItem", "correcaoAtividadeItens_respostaAtividadeItem")
            .leftJoinAndSelect("correcaoAtividadeItens_respostaAtividadeItem.itemAtividade", "respostaAtividadeItem_itemAtividade")
            .leftJoinAndSelect("respostaAtividadeItem_itemAtividade.subitensItemAtividade", "respostaAtividadeItem_itemAtividade_subitensItemAtividade")
            .where("correcaoRespostaAtividade.idCorrecaoRespostaAtividade = :idCorrecaoRespostaAtividade", { idCorrecaoRespostaAtividade })
            .getOne();
    }
    async buscaPorRespostaAtividadeSimples(respostaAtividade) {
        const { idRespostaAtividade } = respostaAtividade;
        return this.correcaoAtividadeRepositorio.createQueryBuilder("correcaoRespostaAtividade")
            .innerJoinAndSelect("correcaoRespostaAtividade.respostaAtividade", "respostaAtividade")
            .innerJoinAndSelect("correcaoRespostaAtividade.autor", "autor")
            // Resposta Atividade
            .innerJoinAndSelect("respostaAtividade.atividade", "atividade")
            .innerJoinAndSelect("respostaAtividade.aluno", "aluno")
            .innerJoinAndSelect("atividade.disciplina", "disciplina")
            .innerJoinAndSelect("atividade.autor", "atividade_autor")
            .innerJoinAndSelect("atividade.curso", "curso")
            .leftJoinAndSelect("respostaAtividade.respostaAtividadeItens", "respostaAtividadeItens")
            .leftJoinAndSelect("respostaAtividadeItens.itemAtividade", "itemAtividade")
            .leftJoinAndSelect("itemAtividade.subitensItemAtividade", "itemAtividade_subitensItemAtividade")
            .leftJoinAndSelect("atividade.alunos", "alunos")
            .leftJoinAndSelect("atividade.itensAtividade", "itensAtividade")
            .leftJoinAndSelect("itensAtividade.subitensItemAtividade", "subitensItemAtividade")
            .where("respostaAtividade.idRespostaAtividade = :idRespostaAtividade AND respostaAtividade.tempoFim IS NOT NULL AND NOW() >= correcaoRespostaAtividade.dataEntregaCorrecao", { idRespostaAtividade })
            .getOne();
    }
    async buscaPorRespostaAtividadeRelatorio(atividade) {
        const { idAtividade } = atividade;
        return this.correcaoAtividadeRepositorio.createQueryBuilder("correcaoRespostaAtividade")
            .innerJoinAndSelect("correcaoRespostaAtividade.respostaAtividade", "respostaAtividade")
            .innerJoinAndSelect("correcaoRespostaAtividade.autor", "autor")
            // Resposta Atividade
            .innerJoinAndSelect("respostaAtividade.atividade", "atividade")
            .innerJoinAndSelect("respostaAtividade.aluno", "aluno")
            .innerJoinAndSelect("atividade.disciplina", "disciplina")
            .innerJoinAndSelect("atividade.autor", "atividade_autor")
            .innerJoinAndSelect("atividade.curso", "curso")
            .leftJoinAndSelect("respostaAtividade.respostaAtividadeItens", "respostaAtividadeItens")
            .leftJoinAndSelect("respostaAtividadeItens.itemAtividade", "itemAtividade")
            .leftJoinAndSelect("itemAtividade.subitensItemAtividade", "itemAtividade_subitensItemAtividade")
            .leftJoinAndSelect("atividade.alunos", "alunos")
            .leftJoinAndSelect("atividade.itensAtividade", "itensAtividade")
            .leftJoinAndSelect("itensAtividade.subitensItemAtividade", "subitensItemAtividade")
            // Itens
            .leftJoinAndSelect("correcaoRespostaAtividade.correcaoAtividadeItens", "correcaoAtividadeItens")
            .leftJoinAndSelect("correcaoAtividadeItens.respostaAtividadeItem", "correcaoAtividadeItens_respostaAtividadeItem")
            .leftJoinAndSelect("correcaoAtividadeItens_respostaAtividadeItem.itemAtividade", "respostaAtividadeItem_itemAtividade")
            .leftJoinAndSelect("respostaAtividadeItem_itemAtividade.subitensItemAtividade", "respostaAtividadeItem_itemAtividade_subitensItemAtividade")
            .where("atividade.idAtividade = :idAtividade AND correcaoRespostaAtividade.dataEntregaCorrecao IS NOT NULL", { idAtividade })
            .getMany();
    }
    async listaRespostaAtividadeDisponivel(disciplina, autor) {
        const { ra } = autor;
        const { idDisciplina } = disciplina;
        return (0, typeorm_1.getRepository)(respostaAtividade_1.default).createQueryBuilder("respostaAtividade")
            .innerJoinAndSelect("respostaAtividade.atividade", "atividade")
            .innerJoinAndSelect("respostaAtividade.aluno", "aluno")
            .innerJoinAndSelect("atividade.disciplina", "disciplina")
            .innerJoinAndSelect("atividade.autor", "autor")
            .innerJoinAndSelect("atividade.curso", "curso")
            .leftJoinAndSelect("respostaAtividade.respostaAtividadeItens", "respostaAtividadeItens")
            .leftJoinAndSelect("respostaAtividadeItens.itemAtividade", "itemAtividade")
            .leftJoinAndSelect("itemAtividade.subitensItemAtividade", "itemAtividade_subitensItemAtividade")
            .leftJoinAndSelect("atividade.alunos", "alunos")
            .leftJoinAndSelect("atividade.itensAtividade", "itensAtividade")
            .leftJoinAndSelect("itensAtividade.subitensItemAtividade", "subitensItemAtividade")
            .where("disciplina.idDisciplina = :idDisciplina AND autor.ra = :ra AND respostaAtividade.tempoFim", { idDisciplina, ra })
            .getMany();
    }
}
exports.CorrecaoAtividadeBO = CorrecaoAtividadeBO;
//# sourceMappingURL=data:application/json;base64,